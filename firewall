#!/bin/sh

### BEGIN INIT INFO
# Provides:             firewall
# Required-Start:
# Required-Stop:
# Default-Start:        2 3 4 5
# Default-Stop:         1
# Short-Description:    IPTables Firewall
### END INIT INFO

IPT=$(which iptables)

## INTERFACES
MAIN_IF="eth0"                  #MAIN_IF6="hev6"

## ADDRESSES
MAIN_IP="178.170.101.100"
#IN_IP="178.33.108.224"
#GLANYCAST="192.168.248.53"

## NETWORKS
#LV0_NET="192.168.144.128/25"    LV0_NET6="2001:470:c8be:10::/60"
#CHUN_NET="192.168.144.0/24"     CHUN_NET6="2001:470:c8be::/48"

## HOSTS
#CLIENTS="81.56.228.225"
#lv0="82.238.123.3"
#dsa_lvo="192.168.144.65"

## ALLOWED LAYER 4 PORTS
#6522 Gobby
ALLOW_IN_MAIN_TCP="22,53,80,443,587,6522"
ALLOW_IN_MAIN_UDP="53"

#"22,53,80,443,63667,64738,64739"
#"53,64738,64738,64739"

start () {
  set -x
  # Default policies
  $IPT  -P INPUT DROP
  $IPT  -P OUTPUT ACCEPT
  $IPT  -P FORWARD DROP


  $IPT  -N new_in_main
  $IPT  -N new_in_vpn


  ################################
  # INPUT chain                  #
  ################################

  # blog spammers
  SPAMMERS="46.162.218.177"
  if [ "$SPAMMERS" ]
  then
    for ip in $SPAMMERS
    do
      $IPT  -A INPUT -i $MAIN_IF -s $ip -j DROP
    done
    unset ip
  fi

  # Loopback is our friend
  $IPT  -A INPUT -i lo -j ACCEPT

  # more efficient way... DEATH TO ALL FUCKERS!
  $IPT  -A INPUT -i $MAIN_IF  -d $MAIN_IP  -p udp --dport 53 -m length --length 0:50 -j DROP
  $IPT  -A INPUT -i $MAIN_IF  -d $MAIN_IP  -p udp --dport 53 -m state --state ESTABLISHED,RELATED -j DROP

  # ICMP is nice
  $IPT  -A INPUT -p icmp --icmp-type ping -m limit --limit 10/s -j ACCEPT
  $IPT  -A INPUT -p icmp --icmp-type ping -j DROP

  # Let established stuff through
  $IPT  -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

  # Kill bad TCP states
  $IPT  -A INPUT -p tcp --tcp-flags SYN,ACK SYN,ACK -m state --state NEW -j DROP
  $IPT  -A INPUT -p tcp ! --syn -m state --state NEW -j DROP

  # There is a lot of netbios crap going around the DC.
  $IPT  -A INPUT -p udp -m multiport --dports 137,138 -j DROP

  # REJECT ident (to avoid slowing down irc connexions)
  $IPT  -A INPUT -p tcp --dport 113 -j REJECT

  # rsync
  #$IPT  -A INPUT -i gla+ -s $CHUN_NET  -p tcp --dport 873 -j ACCEPT
  #$IPT  -A INPUT -i gla+ -s $CHUN_NET  -p udp --dport 873 -j ACCEPT

  # GLANYCAST DNS
  #$IPT  -A INPUT -d $GLANYCAST -p udp --dport 53 -j ACCEPT
  #$IPT  -A INPUT -d $GLANYCAST -p tcp --dport 53 -j ACCEPT

  # General INPUT
  $IPT  -A INPUT -i $MAIN_IF  -m state --state NEW -d $MAIN_IP  -j new_in_main

  # High UDP ports
  $IPT  -A INPUT -p udp -m multiport --dports 1024:65535 -j REJECT

  ################################
  # new_in_main table.           #
  ################################

  # Open specified TCP ports
  if [ "x$ALLOW_IN_MAIN_TCP" != "x" ]; then
    $IPT  -A new_in_main -p tcp -m multiport --dports $ALLOW_IN_MAIN_TCP -j ACCEPT
  fi

  # Open specified UDP ports
  if [ "x$ALLOW_IN_MAIN_UDP" != "x" ]; then
    $IPT  -A new_in_main -p udp -m multiport --dports $ALLOW_IN_MAIN_UDP -j ACCEPT
  fi

   #################################
  ## PREROUTING chain             #
  #################################

  #$IPT  -t nat -A PREROUTING -d $IN_IP -p tcp -m multiport --dports 22,443 -j DNAT --to 192.168.144.155

  #################################
  ## POSTROUTING chain            #
  #################################

  #################################
  ## INVALID and LOGGING          #
  ################################
}

stop () {
  set -x
  echo 0 >/proc/sys/net/ipv4/ip_forward
  echo 0 >| /proc/sys/net/ipv6/conf/all/forwarding

  $IPT  -F INPUT
  $IPT  -F OUTPUT
  $IPT  -F FORWARD
  $IPT  -t nat -F
  $IPT  -t mangle -F
  $IPT  -t raw -F

  $IPT  -F

  $IPT  -X

  $IPT  -P INPUT ACCEPT
  $IPT  -P OUTPUT ACCEPT
  $IPT  -P FORWARD DROP
}

status () {
  echo "
  #########################################################
  ######################## FILTER #########################
  #########################################################
  "
  $1 -L -v -n -t filter

  if [ "$1" != "$IP6T" ]
  then
    echo "
  #########################################################
  ######################### NAT ###########################
  #########################################################
  "
    $1 -L -v -n -t nat
  fi

  echo "
  #########################################################
  ######################## MANGLE #########################
  #########################################################
  "
  $1 -L -v -n -t mangle

  if [ "$1" != "$IP6T" ]
  then
    echo "
  #########################################################
  ######################### RAW ###########################
  #########################################################
  "
    $1 -L -v -n -t raw
  fi
}

case "$1" in
    start)
      start
      ;;
    restart)
      stop
      start
      ;;
    stop)
      stop
      ;;
    status4)
      status $IPT
      ;;
    *)
      echo "Usage: /etc/init.d/firewall {start|stop|restart|status4|status6}"
esac
